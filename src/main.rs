mod utils;
use crate::utils::abs;

mod constants;
use crate::constants::PHASE_SCALE;
use crate::constants::PI;

// generated by ./scripts/lut.py
const COS_LUT_BITS: u32 = 7;
const COS_LUT_SIZE: usize = 1 << COS_LUT_BITS;
const COS_FRAC_BITS: u32 = 32 - COS_LUT_BITS;
const COS_FRAC_MASK: u32 = (1 << COS_FRAC_BITS) - 1;

#[rustfmt::skip]
const COS_LUT_Y: [f32; COS_LUT_SIZE] = [
    1.000000e+00,9.987955e-01,9.951847e-01,9.891765e-01,9.807853e-01,9.700313e-01,9.569403e-01,9.415441e-01,
    9.238795e-01,9.039893e-01,8.819213e-01,8.577286e-01,8.314696e-01,8.032075e-01,7.730105e-01,7.409511e-01,
    7.071068e-01,6.715590e-01,6.343933e-01,5.956993e-01,5.555702e-01,5.141027e-01,4.713967e-01,4.275551e-01,
    3.826834e-01,3.368899e-01,2.902847e-01,2.429802e-01,1.950903e-01,1.467305e-01,9.801714e-02,4.906767e-02,
    6.123234e-17,-4.906767e-02,-9.801714e-02,-1.467305e-01,-1.950903e-01,-2.429802e-01,-2.902847e-01,-3.368899e-01,
    -3.826834e-01,-4.275551e-01,-4.713967e-01,-5.141027e-01,-5.555702e-01,-5.956993e-01,-6.343933e-01,-6.715590e-01,
    -7.071068e-01,-7.409511e-01,-7.730105e-01,-8.032075e-01,-8.314696e-01,-8.577286e-01,-8.819213e-01,-9.039893e-01,
    -9.238795e-01,-9.415441e-01,-9.569403e-01,-9.700313e-01,-9.807853e-01,-9.891765e-01,-9.951847e-01,-9.987955e-01,
    -1.000000e+00,-9.987955e-01,-9.951847e-01,-9.891765e-01,-9.807853e-01,-9.700313e-01,-9.569403e-01,-9.415441e-01,
    -9.238795e-01,-9.039893e-01,-8.819213e-01,-8.577286e-01,-8.314696e-01,-8.032075e-01,-7.730105e-01,-7.409511e-01,
    -7.071068e-01,-6.715590e-01,-6.343933e-01,-5.956993e-01,-5.555702e-01,-5.141027e-01,-4.713967e-01,-4.275551e-01,
    -3.826834e-01,-3.368899e-01,-2.902847e-01,-2.429802e-01,-1.950903e-01,-1.467305e-01,-9.801714e-02,-4.906767e-02,
    -1.836970e-16,4.906767e-02,9.801714e-02,1.467305e-01,1.950903e-01,2.429802e-01,2.902847e-01,3.368899e-01,
    3.826834e-01,4.275551e-01,4.713967e-01,5.141027e-01,5.555702e-01,5.956993e-01,6.343933e-01,6.715590e-01,
    7.071068e-01,7.409511e-01,7.730105e-01,8.032075e-01,8.314696e-01,8.577286e-01,8.819213e-01,9.039893e-01,
    9.238795e-01,9.415441e-01,9.569403e-01,9.700313e-01,9.807853e-01,9.891765e-01,9.951847e-01,9.987955e-01,
];

#[rustfmt::skip]
const COS_LUT_DY: [f32; COS_LUT_SIZE] = [
    -1.204544e-03,-3.610730e-03,-6.008217e-03,-8.391230e-03,-1.075403e-02,-1.309092e-02,-1.539627e-02,-1.766453e-02,
    -1.989024e-02,-2.206803e-02,-2.419265e-02,-2.625900e-02,-2.826208e-02,-3.019708e-02,-3.205933e-02,-3.384434e-02,
    -3.554783e-02,-3.716567e-02,-3.869398e-02,-4.012907e-02,-4.146749e-02,-4.270601e-02,-4.384164e-02,-4.487166e-02,
    -4.579358e-02,-4.660518e-02,-4.730450e-02,-4.788986e-02,-4.835985e-02,-4.871333e-02,-4.894947e-02,-4.906767e-02,
    -4.906767e-02,-4.894947e-02,-4.871333e-02,-4.835985e-02,-4.788986e-02,-4.730450e-02,-4.660518e-02,-4.579358e-02,
    -4.487166e-02,-4.384164e-02,-4.270601e-02,-4.146749e-02,-4.012907e-02,-3.869398e-02,-3.716567e-02,-3.554783e-02,
    -3.384434e-02,-3.205933e-02,-3.019708e-02,-2.826208e-02,-2.625900e-02,-2.419265e-02,-2.206803e-02,-1.989024e-02,
    -1.766453e-02,-1.539627e-02,-1.309092e-02,-1.075403e-02,-8.391230e-03,-6.008217e-03,-3.610730e-03,-1.204544e-03,
    1.204544e-03,3.610730e-03,6.008217e-03,8.391230e-03,1.075403e-02,1.309092e-02,1.539627e-02,1.766453e-02,
    1.989024e-02,2.206803e-02,2.419265e-02,2.625900e-02,2.826208e-02,3.019708e-02,3.205933e-02,3.384434e-02,
    3.554783e-02,3.716567e-02,3.869398e-02,4.012907e-02,4.146749e-02,4.270601e-02,4.384164e-02,4.487166e-02,
    4.579358e-02,4.660518e-02,4.730450e-02,4.788986e-02,4.835985e-02,4.871333e-02,4.894947e-02,4.906767e-02,
    4.906767e-02,4.894947e-02,4.871333e-02,4.835985e-02,4.788986e-02,4.730450e-02,4.660518e-02,4.579358e-02,
    4.487166e-02,4.384164e-02,4.270601e-02,4.146749e-02,4.012907e-02,3.869398e-02,3.716567e-02,3.554783e-02,
    3.384434e-02,3.205933e-02,3.019708e-02,2.826208e-02,2.625900e-02,2.419265e-02,2.206803e-02,1.989024e-02,
    1.766453e-02,1.539627e-02,1.309092e-02,1.075403e-02,8.391230e-03,6.008217e-03,3.610730e-03,1.204544e-03,
];

// CosLookup returns the cosine of x (32 bit unsigned phase value).
pub fn cos_lookup(x: u32) -> f32 {
    let idx = (x >> COS_FRAC_BITS) as usize;
    let frac = (x & COS_FRAC_MASK) as f32;
    return COS_LUT_Y[idx] + frac * COS_LUT_DY[idx];
}

// Cos returns the cosine of x (radians).
pub fn cos(x: f32) -> f32 {
    let xi = (abs(x) * PHASE_SCALE) as u32;
    return cos_lookup(xi);
}

// Sin returns the sine of x (radians).
pub fn sin(x: f32) -> f32 {
    return cos((PI / 2.0) - x);
}

// Tan returns the tangent of x (radians).
pub fn tan(x: f32) -> f32 {
    return sin(x) / cos(x);
}

fn main() {
    print!("cos(0) = {}\n", cos(0.0));
}
